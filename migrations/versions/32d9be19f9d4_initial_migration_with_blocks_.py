"""Initial migration with blocks, transactions and addresses

Revision ID: 32d9be19f9d4
Revises:
Create Date: 2025-09-29 19:43:59.651264

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "32d9be19f9d4"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "addresses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("address", sa.String(length=64), nullable=False),
        sa.Column("balance", sa.BigInteger(), nullable=True),
        sa.Column("tx_count", sa.Integer(), nullable=True),
        sa.Column("first_seen_block", sa.Integer(), nullable=True),
        sa.Column("last_seen_block", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_addresses_address"), "addresses", ["address"], unique=True)
    op.create_index(
        op.f("ix_addresses_first_seen_block"),
        "addresses",
        ["first_seen_block"],
        unique=False,
    )
    op.create_index(op.f("ix_addresses_id"), "addresses", ["id"], unique=False)
    op.create_index(
        op.f("ix_addresses_last_seen_block"),
        "addresses",
        ["last_seen_block"],
        unique=False,
    )
    op.create_table(
        "blocks",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("hash", sa.String(length=64), nullable=False),
        sa.Column("height", sa.Integer(), nullable=False),
        sa.Column("version", sa.Integer(), nullable=True),
        sa.Column("merkleroot", sa.String(length=64), nullable=True),
        sa.Column("time", sa.BigInteger(), nullable=True),
        sa.Column("nonce", sa.BigInteger(), nullable=True),
        sa.Column("bits", sa.String(length=8), nullable=True),
        sa.Column("difficulty", sa.Float(), nullable=True),
        sa.Column("chainwork", sa.String(length=64), nullable=True),
        sa.Column("n_tx", sa.Integer(), nullable=True),
        sa.Column("size", sa.Integer(), nullable=True),
        sa.Column("weight", sa.Integer(), nullable=True),
        sa.Column("previous_block_hash", sa.String(length=64), nullable=True),
        sa.Column("next_block_hash", sa.String(length=64), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_blocks_hash"), "blocks", ["hash"], unique=True)
    op.create_index(op.f("ix_blocks_height"), "blocks", ["height"], unique=True)
    op.create_index(op.f("ix_blocks_id"), "blocks", ["id"], unique=False)
    op.create_index(
        op.f("ix_blocks_next_block_hash"), "blocks", ["next_block_hash"], unique=False
    )
    op.create_index(
        op.f("ix_blocks_previous_block_hash"),
        "blocks",
        ["previous_block_hash"],
        unique=False,
    )
    op.create_index(op.f("ix_blocks_time"), "blocks", ["time"], unique=False)
    op.create_table(
        "transactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("txid", sa.String(length=64), nullable=False),
        sa.Column("block_hash", sa.String(length=64), nullable=True),
        sa.Column("block_height", sa.Integer(), nullable=True),
        sa.Column("version", sa.Integer(), nullable=True),
        sa.Column("locktime", sa.BigInteger(), nullable=True),
        sa.Column("size", sa.Integer(), nullable=True),
        sa.Column("vsize", sa.Integer(), nullable=True),
        sa.Column("weight", sa.Integer(), nullable=True),
        sa.Column("fee", sa.BigInteger(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["block_hash"],
            ["blocks.hash"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transactions_block_hash"), "transactions", ["block_hash"], unique=False
    )
    op.create_index(
        op.f("ix_transactions_block_height"),
        "transactions",
        ["block_height"],
        unique=False,
    )
    op.create_index(op.f("ix_transactions_id"), "transactions", ["id"], unique=False)
    op.create_index(op.f("ix_transactions_txid"), "transactions", ["txid"], unique=True)
    op.create_table(
        "transaction_inputs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.Integer(), nullable=False),
        sa.Column("vout", sa.Integer(), nullable=True),
        sa.Column("prev_txid", sa.String(length=64), nullable=True),
        sa.Column("script_sig", sa.Text(), nullable=True),
        sa.Column("sequence", sa.BigInteger(), nullable=True),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transaction_inputs_id"), "transaction_inputs", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_transaction_inputs_prev_txid"),
        "transaction_inputs",
        ["prev_txid"],
        unique=False,
    )
    op.create_table(
        "transaction_outputs",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.Integer(), nullable=False),
        sa.Column("n", sa.Integer(), nullable=True),
        sa.Column("value", sa.BigInteger(), nullable=True),
        sa.Column("script_pubkey", sa.Text(), nullable=True),
        sa.Column("address", sa.String(length=64), nullable=True),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transactions.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transaction_outputs_address"),
        "transaction_outputs",
        ["address"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transaction_outputs_id"), "transaction_outputs", ["id"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_transaction_outputs_id"), table_name="transaction_outputs")
    op.drop_index(
        op.f("ix_transaction_outputs_address"), table_name="transaction_outputs"
    )
    op.drop_table("transaction_outputs")
    op.drop_index(
        op.f("ix_transaction_inputs_prev_txid"), table_name="transaction_inputs"
    )
    op.drop_index(op.f("ix_transaction_inputs_id"), table_name="transaction_inputs")
    op.drop_table("transaction_inputs")
    op.drop_index(op.f("ix_transactions_txid"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_id"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_block_height"), table_name="transactions")
    op.drop_index(op.f("ix_transactions_block_hash"), table_name="transactions")
    op.drop_table("transactions")
    op.drop_index(op.f("ix_blocks_time"), table_name="blocks")
    op.drop_index(op.f("ix_blocks_previous_block_hash"), table_name="blocks")
    op.drop_index(op.f("ix_blocks_next_block_hash"), table_name="blocks")
    op.drop_index(op.f("ix_blocks_id"), table_name="blocks")
    op.drop_index(op.f("ix_blocks_height"), table_name="blocks")
    op.drop_index(op.f("ix_blocks_hash"), table_name="blocks")
    op.drop_table("blocks")
    op.drop_index(op.f("ix_addresses_last_seen_block"), table_name="addresses")
    op.drop_index(op.f("ix_addresses_id"), table_name="addresses")
    op.drop_index(op.f("ix_addresses_first_seen_block"), table_name="addresses")
    op.drop_index(op.f("ix_addresses_address"), table_name="addresses")
    op.drop_table("addresses")
    # ### end Alembic commands ###
